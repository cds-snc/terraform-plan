name: Test action
on: pull_request

env:
  AWS_REGION: ca-central-1
  OPEN_TOFU_VERSION: 1.10.5
  TERRAFORM_VERSION: 1.9.8
  TERRAGRUNT_VERSION: 0.68.6
  TF_SUMMARIZE_VERSION: 0.3.5


permissions:
  id-token: write
  pull-requests: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Standard tests (terraform)
          - test: changes
            allow-failure: false
          - test: no-changes
            allow-failure: false
          - test: format-error
            allow-failure: true 
          - test: invalid
            allow-failure: true
          - test: conftest-deny
            allow-failure: true
          - test: skip-conftest
            allow-failure: false
            skip-conftest: true
          - test: skip-fmt
            allow-failure: false
            skip-fmt: true                        
          - test: skip-plan
            allow-failure: false
            skip-plan: true
          - test: truncate-plan
            allow-failure: false
          - test: init-fail
            allow-failure: true
          - test: validate-fail
            allow-failure: true
          - test: import
            allow-failure: true
          # Terragrunt tests
          - test: terragrunt
            allow-failure: false
            terragrunt: true
          - test: init-run-all
            allow-failure: false
            terragrunt: true
            init-run-all: true
          - test: plan-options
            allow-failure: false
            terraform-plan: -var-file='plan_options.tfvars'
          # OpenTofu tests
          - test: changes-open-tofu
            allow-failure: false
            open-tofu: true
          - test: no-changes-open-tofu
            allow-failure: false
            open-tofu: true
          - test: format-error-open-tofu
            allow-failure: true
            open-tofu: true
          - test: invalid-open-tofu
            allow-failure: true
            open-tofu: true
          - test: conftest-deny-open-tofu
            allow-failure: true
            open-tofu: true
          - test: skip-conftest-open-tofu
            allow-failure: false
            skip-conftest: true
            open-tofu: true
          - test: skip-fmt-open-tofu
            allow-failure: false
            skip-fmt: true
            open-tofu: true
          - test: skip-plan-open-tofu
            allow-failure: false
            skip-plan: true
            open-tofu: true
          - test: truncate-plan-open-tofu
            allow-failure: false
            open-tofu: true
          - test: init-fail-open-tofu
            allow-failure: true
            open-tofu: true
          - test: validate-fail-open-tofu
            allow-failure: true
            open-tofu: true
          - test: import-open-tofu
            allow-failure: true
            open-tofu: true
          # Terragrunt + OpenTofu tests
          - test: terragrunt-open-tofu
            allow-failure: false
            terragrunt: true
            open-tofu: true
          - test: init-run-all-open-tofu
            allow-failure: false
            terragrunt: true
            init-run-all: true
            open-tofu: true
          - test: plan-options-open-tofu
            allow-failure: false
            terraform-plan: -var-file='plan_options.tfvars'
            open-tofu: true
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Setup open Tofu CLI
        uses: opentofu/setup-opentofu@9cc1438d52f7a4370743f2b98cd3a803a06232c2
        with:
          tofu_version: ${{ env.OPEN_TOFU_VERSION }}

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a # v4.3.1
        with:
          role-to-assume: arn:aws:iam::124044056575:role/terraform-plan-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Test ${{ matrix.test }}
        uses: ./
        with:
          directory: test/${{ matrix.test }}
          allow-failure: ${{ matrix.allow-failure }}
          comment-title: Test ${{ matrix.test }}
          comment-delete: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          skip-conftest: ${{ matrix.skip-conftest || 'false' }}
          skip-fmt: ${{ matrix.skip-fmt || 'false' }}
          skip-plan: ${{ matrix.skip-plan || 'false' }}
          terragrunt: ${{ matrix.terragrunt || 'false' }}
          open-tofu: ${{ matrix.open-tofu || 'false' }}
          init-run-all: ${{ matrix.init-run-all || 'false'}}
          terraform-plan: ${{ matrix.terraform-plan || '' }}

  test-action-comments:
    needs: terraform-plan
    runs-on: ubuntu-latest
    steps:
      - name: Test action comments
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let isFailed = false;
            const testComments = [
              // Terraform
              { exist: true, title: /Test changes/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test format-error/g, state: /`failed`[^`]+`success`/g },
              { exist: true, title: /Test invalid/g, state: /`failed`[^`]+`failed`/g },
              { exist: false, title: /Test no-changes/g, state: /./g },
              { exist: true, title: /Test conftest-deny/g, state: /FAIL/g },
              { exist: false, title: /Test skip-conftest/g, state: /Conftest:\*\*/gm },
              { exist: true, title: /Test skip-fmt/g, state: /Terraform Validate:\*\* `success`\n\*\*✅ &nbsp; Terraform Plan/gm },
              { exist: true, title: /Test skip-plan/g, state: /Terraform Format:\*\* `success`\n/gm },
              { exist: true, title: /Test truncate-plan/gm, state: /plan has been truncated/gm },
              { exist: true, title: /Test init-fail/g, state: /Terraform Init:\*\* `failed`\n/gm },
              { exist: true, title: /Test validate-fail/g, state: /Terraform Validate:\*\* `failed`\n/gm },
              { exist: true, title: /Test import/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test plan-options/g, state: /`success`[^`]+`success`/g },
              // Terragrunt
              { exist: true, title: /Test terragrunt/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test init-run-all/g, state: /`success`[^`]+`success`/g },
              // OpenTofu
              { exist: true, title: /Test changes-open-tofu/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test format-error-open-tofu/g, state: /`failed`[^`]+`success`/g },
              { exist: true, title: /Test invalid-open-tofu/g, state: /`failed`[^`]+`failed`/g },
              { exist: false, title: /Test no-changes-open-tofu/g, state: /./g },
              { exist: true, title: /Test conftest-deny-open-tofu/g, state: /FAIL/g },
              { exist: false, title: /Test skip-conftest-open-tofu/g, state: /Conftest:\*\*/gm },
              { exist: true, title: /Test skip-fmt-open-tofu/g, state: /Terraform Validate:\*\* `success`\n\*\*✅ &nbsp; Terraform Plan/gm },
              { exist: true, title: /Test skip-plan-open-tofu/g, state: /Terraform Format:\*\* `success`\n/gm },
              { exist: true, title: /Test truncate-plan-open-tofu/gm, state: /plan has been truncated/gm },
              { exist: true, title: /Test init-fail-open-tofu/g, state: /Terraform Init:\*\* `failed`\n/gm },
              { exist: true, title: /Test validate-fail-open-tofu/g, state: /Terraform Validate:\*\* `failed`\n/gm },
              { exist: true, title: /Test import-open-tofu/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test plan-options-open-tofu/g, state: /`success`[^`]+`success`/g },
              // Terragrunt + OpenTofu
              { exist: true, title: /Test terragrunt-open-tofu/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test init-run-all-open-tofu/g, state: /`success`[^`]+`success`/g },
              { exist: true, title: /Test plan-options-open-tofu/g, state: /`success`[^`]+`success`/g },
            ];

            // Get the existing comments.
            const comments = await github.paginate(github.rest.issues.listComments, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            });
            console.log(`Found ${comments.length} comments`);

            // Run through the tests
            let botComment;
            for(let test of testComments){
              botComment = comments.find(comment => comment.body.match(test.title) && comment.body.match(test.state));
              if((botComment && !test.exist) || (!botComment && test.exist)){
                console.log(`Failed '${test.title}'`);
                isFailed = true;
              }
            }

            if(isFailed){
              core.setFailed('PR comments did not match');
            }

  test-directory-failure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup terraform tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Test directory failure
        id: directory-failure
        continue-on-error: true
        uses: ./
        with:
          directory: invalid
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check directory failure
        if: steps.directory-failure.outcome == 'failure'
        run: |
          echo "Directory failure test passed"

      - name: Test failed
        if: steps.directory-failure.outcome == 'success' && steps.directory-failure.conclusion == 'success'
        run: |
          exit 1
